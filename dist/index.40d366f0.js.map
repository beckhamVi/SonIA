{"mappings":"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","sources":["src/js/spotify/api.js"],"sourcesContent":["// Configuración de Spotify y variables globales\r\nconst client_id = \"83a3b2f0f4cb46e6ad62b6e83ea2a950\";\r\nconst client_secret = \"270c45b105c54368bc0100219007c092\";\r\n\r\n// Elementos del DOM - UI Controls\r\nconst menuToggle = document.getElementById('menu-toggle');\r\nconst themeToggle = document.getElementById('theme-toggle');\r\nconst sidebar = document.querySelector('.sidebar');\r\nconst contentWrapper = document.querySelector('.content-wrapper');\r\nconst themeIcon = themeToggle.querySelector('i');\r\n\r\n// Elementos del DOM - Player\r\nconst songInput = document.getElementById(\"song-input\");\r\nconst searchButton = document.getElementById(\"search-button\");\r\nconst albumCover = document.getElementById(\"album-cover\");\r\nconst trackTitle = document.getElementById(\"track-title\");\r\nconst trackArtist = document.getElementById(\"track-artist\");\r\nconst playPauseButton = document.getElementById(\"playPauseButton\");\r\nconst playPauseIcon = playPauseButton.querySelector('i');\r\nconst prevButton = document.getElementById(\"prevButton\");\r\nconst nextButton = document.getElementById(\"nextButton\");\r\nconst shuffleButton = document.getElementById(\"shuffleButton\");\r\nconst repeatButton = document.getElementById(\"repeatButton\");\r\nconst audio = new Audio();\r\nconst progressBar = document.querySelector('.progress-bar');\r\nconst progress = document.querySelector('.progress');\r\nconst currentTimeElem = document.getElementById(\"currentTime\");\r\nconst durationElem = document.getElementById(\"duration\");\r\nconst volumeControl = document.getElementById(\"volumeControl\");\r\nconst songInfo = document.getElementById(\"song-info\");\r\nconst recommendationsContainer = document.getElementById(\"recommendations\");\r\n\r\n// Variables de estado\r\nlet recommendations = [];\r\nlet currentTrackIndex = 0;\r\nlet isPlaying = false;\r\nlet isDarkTheme = false;\r\nlet isShuffleOn = false;\r\nlet isRepeatOn = false;\r\n\r\n// Funciones de UI\r\nfunction toggleSidebar() {\r\n    sidebar.classList.toggle('active');\r\n    contentWrapper.classList.toggle('shifted');\r\n}\r\n\r\nfunction toggleTheme() {\r\n    document.body.classList.toggle('tema-oscuro');\r\n    isDarkTheme = !isDarkTheme;\r\n    \r\n    if (isDarkTheme) {\r\n        themeIcon.classList.replace('fa-sun', 'fa-moon');\r\n    } else {\r\n        themeIcon.classList.replace('fa-moon', 'fa-sun');\r\n    }\r\n\r\n    localStorage.setItem('theme', isDarkTheme ? 'dark' : 'light');\r\n}\r\n\r\n// Función para verificar elementos del DOM\r\nfunction checkElements() {\r\n    const elements = {\r\n        menuToggle, themeToggle, sidebar, contentWrapper, songInput, searchButton,\r\n        albumCover, trackTitle, trackArtist, playPauseButton, prevButton, nextButton,\r\n        shuffleButton, repeatButton, progressBar, currentTimeElem, durationElem, \r\n        volumeControl, songInfo, recommendationsContainer\r\n    };\r\n\r\n    for (const [name, element] of Object.entries(elements)) {\r\n        if (!element) {\r\n            console.error(`Elemento ${name} no encontrado`);\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// Funciones de la API de Spotify\r\nasync function getAccessToken() {\r\n    try {\r\n        const response = await fetch(\"https://accounts.spotify.com/api/token\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                Authorization: \"Basic \" + btoa(client_id + \":\" + client_secret),\r\n            },\r\n            body: \"grant_type=client_credentials\",\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Error en la autenticación');\r\n        }\r\n        const data = await response.json();\r\n        return data.access_token;\r\n    } catch (error) {\r\n        console.error(\"Error obteniendo token:\", error);\r\n        alert(\"Error de autenticación con Spotify\");\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function searchSong(song) {\r\n    try {\r\n        const accessToken = await getAccessToken();\r\n        if (!accessToken) return null;\r\n        \r\n        const response = await fetch(\r\n            `https://api.spotify.com/v1/search?q=${encodeURIComponent(song)}&type=track&market=ES`,\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: \"Bearer \" + accessToken,\r\n                },\r\n            }\r\n        );\r\n        if (!response.ok) {\r\n            throw new Error('Error en la búsqueda');\r\n        }\r\n        const data = await response.json();\r\n        if (data.tracks && data.tracks.items.length > 0) {\r\n            return data.tracks.items[0];\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        console.error(\"Error en searchSong:\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n// Funciones del reproductor\r\nfunction loadTrackInPlayer(trackData) {\r\n    if (!trackData) return;\r\n    \r\n    albumCover.src = trackData.album.images[0].url;\r\n    trackTitle.textContent = trackData.name;\r\n    trackArtist.textContent = trackData.artists.map(artist => artist.name).join(\", \");\r\n    audio.src = trackData.preview_url;\r\n\r\n    audio.play().catch(error => {\r\n        console.error(\"Error reproduciendo audio:\", error);\r\n    });\r\n    isPlaying = true;\r\n    playPauseIcon.classList.replace('fa-play', 'fa-pause');\r\n\r\n    // Guardar en localStorage\r\n    const currentTrack = {\r\n        name: trackData.name,\r\n        artist: trackData.artists[0].name,\r\n        previewUrl: trackData.preview_url,\r\n        albumCover: trackData.album.images[0].url\r\n    };\r\n    localStorage.setItem(\"currentTrack\", JSON.stringify(currentTrack));\r\n\r\n    audio.addEventListener(\"loadedmetadata\", () => {\r\n        const durationMinutes = Math.floor(audio.duration / 60);\r\n        const durationSeconds = Math.floor(audio.duration % 60);\r\n        durationElem.textContent = `${durationMinutes}:${durationSeconds < 10 ? '0' : ''}${durationSeconds}`;\r\n    });\r\n}\r\n\r\nasync function displayRecommendations(songURI) {\r\n    try {\r\n        const accessToken = await getAccessToken();\r\n        if (!accessToken || !songURI) return;\r\n\r\n        const trackID = songURI.split(\":\")[2];\r\n        const response = await fetch(\r\n            `https://api.spotify.com/v1/recommendations?seed_tracks=${trackID}&limit=20&market=ES`,\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: \"Bearer \" + accessToken,\r\n                },\r\n            }\r\n        );\r\n        \r\n        if (!response.ok) {\r\n            throw new Error('Error obteniendo recomendaciones');\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        recommendationsContainer.innerHTML = \"<h2>Recomendaciones:</h2>\";\r\n        recommendations = data.tracks;\r\n        currentTrackIndex = 0;\r\n        \r\n        data.tracks.forEach((track, index) => {\r\n            const trackContainer = document.createElement(\"div\");\r\n            trackContainer.className = \"recommendation-item\";\r\n            \r\n            const trackInfo = document.createElement(\"p\");\r\n            trackInfo.textContent = `${track.name} - ${track.artists.map(artist => artist.name).join(\", \")}`;\r\n            \r\n            trackContainer.appendChild(trackInfo);\r\n            recommendationsContainer.appendChild(trackContainer);\r\n\r\n            trackContainer.addEventListener(\"click\", () => {\r\n                currentTrackIndex = index;\r\n                loadTrackInPlayer(track);\r\n            });\r\n        });\r\n        \r\n        recommendationsContainer.scrollIntoView({ behavior: \"smooth\" });\r\n    } catch (error) {\r\n        console.error(\"Error en displayRecommendations:\", error);\r\n        recommendationsContainer.innerHTML = \"<p>Error al cargar recomendaciones</p>\";\r\n    }\r\n}\r\n\r\n// Funciones de control de reproducción\r\nfunction playNextTrack() {\r\n    if (recommendations.length === 0) return;\r\n    if (isShuffleOn) {\r\n        currentTrackIndex = Math.floor(Math.random() * recommendations.length);\r\n    } else {\r\n        currentTrackIndex = (currentTrackIndex + 1) % recommendations.length;\r\n    }\r\n    loadTrackInPlayer(recommendations[currentTrackIndex]);\r\n}\r\n\r\nfunction playPrevTrack() {\r\n    if (recommendations.length === 0) return;\r\n    if (isShuffleOn) {\r\n        currentTrackIndex = Math.floor(Math.random() * recommendations.length);\r\n    } else {\r\n        currentTrackIndex = (currentTrackIndex - 1 + recommendations.length) % recommendations.length;\r\n    }\r\n    loadTrackInPlayer(recommendations[currentTrackIndex]);\r\n}\r\n\r\n// Event Listeners\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    if (!checkElements()) {\r\n        console.error(\"Faltan elementos del DOM necesarios\");\r\n        return;\r\n    }\r\n    \r\n    // Cargar tema guardado\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme === 'dark') {\r\n        document.body.classList.add('tema-oscuro');\r\n        themeIcon.classList.replace('fa-sun', 'fa-moon');\r\n        isDarkTheme = true;\r\n    }\r\n\r\n    // Cargar último track reproducido\r\n    const savedTrack = localStorage.getItem(\"currentTrack\");\r\n    if (savedTrack) {\r\n        const trackData = JSON.parse(savedTrack);\r\n        albumCover.src = trackData.albumCover;\r\n        trackTitle.textContent = trackData.name;\r\n        trackArtist.textContent = trackData.artist;\r\n        audio.src = trackData.previewUrl;\r\n    }\r\n\r\n    // Inicializar volumen\r\n    audio.volume = volumeControl.value;\r\n});\r\n\r\n// UI Event Listeners\r\nmenuToggle.addEventListener('click', toggleSidebar);\r\n\r\ndocument.addEventListener('click', (e) => {\r\n    if (!sidebar.contains(e.target) && \r\n        !menuToggle.contains(e.target) && \r\n        sidebar.classList.contains('active')) {\r\n        toggleSidebar();\r\n    }\r\n});\r\n\r\nthemeToggle.addEventListener('click', toggleTheme);\r\n\r\n// Player Event Listeners\r\nplayPauseButton.addEventListener('click', () => {\r\n    if (audio.paused) {\r\n        audio.play().catch(e => console.error(\"Error al reproducir:\", e));\r\n        playPauseIcon.classList.replace('fa-play', 'fa-pause');\r\n        isPlaying = true;\r\n    } else {\r\n        audio.pause();\r\n        playPauseIcon.classList.replace('fa-pause', 'fa-play');\r\n        isPlaying = false;\r\n    }\r\n});\r\n\r\nshuffleButton.addEventListener('click', () => {\r\n    isShuffleOn = !isShuffleOn;\r\n    shuffleButton.classList.toggle('active');\r\n});\r\n\r\nrepeatButton.addEventListener('click', () => {\r\n    isRepeatOn = !isRepeatOn;\r\n    repeatButton.classList.toggle('active');\r\n});\r\n\r\nvolumeControl.addEventListener('input', (e) => {\r\n    audio.volume = e.target.value;\r\n    localStorage.setItem('volume', e.target.value);\r\n});\r\n\r\nprogressBar.addEventListener('click', (e) => {\r\n    const progressWidth = progressBar.clientWidth;\r\n    const clickX = e.offsetX;\r\n    const progressPercentage = (clickX / progressWidth);\r\n    \r\n    audio.currentTime = progressPercentage * audio.duration;\r\n});\r\n\r\naudio.addEventListener(\"timeupdate\", () => {\r\n    const currentMinutes = Math.floor(audio.currentTime / 60);\r\n    const currentSeconds = Math.floor(audio.currentTime % 60);\r\n    currentTimeElem.textContent = `${currentMinutes}:${currentSeconds < 10 ? '0' : ''}${currentSeconds}`;\r\n    const progressPercent = (audio.currentTime / audio.duration) * 100;\r\n    progress.style.width = `${progressPercent}%`;\r\n});\r\n\r\naudio.addEventListener(\"ended\", () => {\r\n    if (isRepeatOn) {\r\n        audio.currentTime = 0;\r\n        audio.play();\r\n    } else {\r\n        playNextTrack();\r\n    }\r\n});\r\n\r\n// Búsqueda y reproducción\r\nsearchButton.addEventListener(\"click\", async () => {\r\n    const songName = songInput.value;\r\n    if (!songName) {\r\n        alert(\"Por favor ingresa el nombre de una canción\");\r\n        return;\r\n    }\r\n    \r\n    const trackData = await searchSong(songName);\r\n    if (trackData) {\r\n        loadTrackInPlayer(trackData);\r\n        await displayRecommendations(trackData.uri);\r\n    } else {\r\n        songInfo.innerHTML = \"Canción no encontrada.\";\r\n    }\r\n});\r\n\r\n// Controles de reproducción\r\nnextButton.addEventListener(\"click\", playNextTrack);\r\nprevButton.addEventListener(\"click\", playPrevTrack);"],"names":[],"version":3,"file":"index.40d366f0.js.map","sourceRoot":"/__parcel_source_root/"}